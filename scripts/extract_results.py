import os
import csv
import json
import argparse
from typing import List


"""Script to extract relevant results from results-file of allennlp predict-command.

Creates new results file with name <input-name>_extracted.csv.
Removes old results file to avoid cluttering.
"""


def extract_results(fpath: str) -> List[List[float]]:
    class_probs = []
    with open(fpath) as fin:
        for line in fin:
            class_probs.append(json.loads(line)['arc_probs'])
    return class_probs


def write_results(results: List[List[float]], fpath_out) -> None:
    with open(fpath_out, 'w') as fout:
        writer = csv.writer(fout)
        for prediction in results:
            writer.writerow(prediction)


def main(cmd_args: argparse.Namespace) -> None:
    results = extract_results(cmd_args.path)
    fdir = '/'.join(cmd_args.path.split('/')[:-1])
    fname = cmd_args.path.split('/')[-1]
    fname_out = fname.split('.')[0] + '_extracted.csv'
    write_results(results, os.path.join(fdir, fname_out))


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-p', '--path', type=str, required=True,
                        help='Path to results file generated by allennlp predict-command.')
    args = parser.parse_args()
    main(args)
